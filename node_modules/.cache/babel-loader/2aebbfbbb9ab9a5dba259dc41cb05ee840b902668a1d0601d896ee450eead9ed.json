{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import WeatherForecast from './Components/WeatherForecast';\n// import MobileWeather from './Components/MobileWeather';\n// import WeatherInput from './Components/weatherInput';\n\n// function App() {\n//   const [data, setData] = useState({});\n//   const [location, setLocation] = useState('Hyderabad');\n//   const [temperature, setTemperature] = useState(0);\n//   const [description, setDescription] = useState('');\n\n//   useEffect(() => {\n//     getWeatherData(location);\n//   }, []);\n\n//   async function getWeatherData(location) {\n//     try {\n//       const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=094b8fd5531e1870279f58b241957f6f`);\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setData(data);\n//       setLocation(data.city.name);\n//       setDescription(data.list[0].weather[0].description);\n\n//       // Extract today's weather details\n//       const today = new Date().getDate();\n//       const todayWeather = data.list.find(item => new Date(item.dt * 1000).getDate() === today);\n\n//       const temperatureInCelsius = todayWeather.main.temp - 273.15;\n//       setTemperature(temperatureInCelsius.toFixed(2));\n\n//     } catch (error) {\n//       console.error('Error fetching weather data:', error);\n//     }\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className='title'>Weather Forecast for {location}</div>\n//       {/* <WeatherInput getWeatherData={getWeatherData}/>\n//       <MobileWeather location={location} temperature={temperature} description={description}/> */}\n//       <WeatherForecast data={data}/>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/Reactjs Projects/weather/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import WeatherForecast from './Components/WeatherForecast';\n// import MobileWeather from './Components/MobileWeather';\n// import WeatherInput from './Components/weatherInput';\n\n// function App() {\n//   const [data, setData] = useState({});\n//   const [location, setLocation] = useState('Hyderabad');\n//   const [temperature, setTemperature] = useState(0);\n//   const [description, setDescription] = useState('');\n\n//   useEffect(() => {\n//     getWeatherData(location);\n//   }, []);\n\n//   async function getWeatherData(location) {\n//     try {\n//       const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=094b8fd5531e1870279f58b241957f6f`);\n        \n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setData(data);\n//       setLocation(data.city.name);\n//       setDescription(data.list[0].weather[0].description);\n\n//       // Extract today's weather details\n//       const today = new Date().getDate();\n//       const todayWeather = data.list.find(item => new Date(item.dt * 1000).getDate() === today);\n\n//       const temperatureInCelsius = todayWeather.main.temp - 273.15;\n//       setTemperature(temperatureInCelsius.toFixed(2));\n\n//     } catch (error) {\n//       console.error('Error fetching weather data:', error);\n//     }\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className='title'>Weather Forecast for {location}</div>\n//       {/* <WeatherInput getWeatherData={getWeatherData}/>\n//       <MobileWeather location={location} temperature={temperature} description={description}/> */}\n//       <WeatherForecast data={data}/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}