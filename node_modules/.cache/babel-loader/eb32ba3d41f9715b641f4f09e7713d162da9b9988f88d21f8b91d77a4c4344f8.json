{"ast":null,"code":"import React from'react';import'./WeatherForecast.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function WeatherForecast(_ref){let{data}=_ref;if(!data.city||!data.list){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}const{city,list}=data;const{name,coord,country}=city;const{lat,lon}=coord;// Function to convert Kelvin to Celsius\nconst convertToCelsius=temp=>(temp-273.15).toFixed(2);// Function to filter weather data for a specific time each day\nconst filterWeatherDataByTime=(list,targetHour)=>{const filteredData=[];const dates=new Set();list.forEach(item=>{const date=new Date(item.dt*1000);const hour=date.getUTCHours();if(hour===targetHour&&!dates.has(date.toDateString())){dates.add(date.toDateString());filteredData.push(item);}});return filteredData;};// Get weather data for 12:00 PM (noon) each day\nconst filteredData=filterWeatherDataByTime(list,12);return/*#__PURE__*/_jsx(\"div\",{className:\"weather-forecast\",children:/*#__PURE__*/_jsx(\"div\",{className:\"forecast-list\",children:filteredData.map((forecast,index)=>{const{dt_txt,main,weather,wind,pop}=forecast;const{temp}=main;const{description}=weather[0];const{speed}=wind;return/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/\".concat(description,\".png\"),alt:description}),/*#__PURE__*/_jsxs(\"p\",{className:\"temp\",children:[convertToCelsius(temp),\"\\xB0C-\",/*#__PURE__*/_jsx(\"span\",{children:description})]}),/*#__PURE__*/_jsx(\"h2\",{children:new Date(dt_txt).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"p\",{className:\"wind\",children:[\"Wind Speed: \",speed,\" m/s\"]})]},index);})})});}export default WeatherForecast;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","WeatherForecast","_ref","data","city","list","children","name","coord","country","lat","lon","convertToCelsius","temp","toFixed","filterWeatherDataByTime","targetHour","filteredData","dates","Set","forEach","item","date","Date","dt","hour","getUTCHours","has","toDateString","add","push","className","map","forecast","index","dt_txt","main","weather","wind","pop","description","speed","src","concat","alt","toLocaleDateString"],"sources":["D:/Reactjs Projects/weather/src/Components/WeatherForecast.js"],"sourcesContent":["import React from 'react';\r\nimport './WeatherForecast.css';\r\nfunction WeatherForecast({ data }) {\r\n  if (!data.city || !data.list) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { city, list } = data;\r\n  const { name, coord, country } = city;\r\n  const { lat, lon } = coord;\r\n\r\n  // Function to convert Kelvin to Celsius\r\n  const convertToCelsius = (temp) => (temp - 273.15).toFixed(2);\r\n\r\n  // Function to filter weather data for a specific time each day\r\n  const filterWeatherDataByTime = (list, targetHour) => {\r\n    const filteredData = [];\r\n    const dates = new Set();\r\n\r\n    list.forEach((item) => {\r\n      const date = new Date(item.dt * 1000);\r\n      const hour = date.getUTCHours();\r\n\r\n      if (hour === targetHour && !dates.has(date.toDateString())) {\r\n        dates.add(date.toDateString());\r\n        filteredData.push(item);\r\n      }\r\n    });\r\n\r\n    return filteredData;\r\n  };\r\n\r\n  // Get weather data for 12:00 PM (noon) each day\r\n  const filteredData = filterWeatherDataByTime(list, 12);\r\n\r\n  return (\r\n    <div className=\"weather-forecast\">\r\n      <div className=\"forecast-list\">\r\n        {filteredData.map((forecast, index) => {\r\n          const { dt_txt, main, weather, wind, pop } = forecast;\r\n          const { temp } = main;\r\n          const { description } = weather[0];\r\n          const { speed } = wind;\r\n\r\n          return (\r\n            <div key={index} className=\"forecast-item\">\r\n              \r\n              <img src={`/images/${description}.png`} alt={description} />\r\n              <p className='temp'>{convertToCelsius(temp)}Â°C-<span>{description}</span></p>\r\n              <h2>{new Date(dt_txt).toLocaleDateString()}</h2>\r\n              <p className='wind'>Wind Speed: {speed} m/s</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}