{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs Projects\\\\weather\\\\src\\\\Components\\\\WeatherForecast.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherForecast({\n  data\n}) {\n  if (!data.city || !data.list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    city,\n    list\n  } = data;\n  const {\n    name,\n    coord,\n    country\n  } = city;\n  const {\n    lat,\n    lon\n  } = coord;\n\n  // Function to convert Kelvin to Celsius\n  const convertToCelsius = temp => (temp - 273.15).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Weather Forecast for \", name, \", \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", lon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-list\",\n      children: list.map((forecast, index) => {\n        const {\n          dt_txt,\n          main,\n          weather,\n          wind,\n          pop\n        } = forecast;\n        const {\n          temp\n        } = main;\n        const {\n          description\n        } = weather[0];\n        const {\n          speed\n        } = wind;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: new Date(dt_txt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", convertToCelsius(temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Weather: \", description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Precipitation Probability: \", (pop * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherForecast","data","city","list","children","fileName","_jsxFileName","lineNumber","columnNumber","name","coord","country","lat","lon","convertToCelsius","temp","toFixed","className","map","forecast","index","dt_txt","main","weather","wind","pop","description","speed","Date","toLocaleString","_c","$RefreshReg$"],"sources":["D:/Reactjs Projects/weather/src/Components/WeatherForecast.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction WeatherForecast({ data }) {\r\n  if (!data.city || !data.list) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { city, list } = data;\r\n  const { name, coord, country } = city;\r\n  const { lat, lon } = coord;\r\n\r\n  // Function to convert Kelvin to Celsius\r\n  const convertToCelsius = (temp) => (temp - 273.15).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"weather-forecast\">\r\n      <h1>Weather Forecast for {name}, {country}</h1>\r\n      <p>Latitude: {lat}</p>\r\n      <p>Longitude: {lon}</p>\r\n      <div className=\"forecast-list\">\r\n        {list.map((forecast, index) => {\r\n          const { dt_txt, main, weather, wind, pop } = forecast;\r\n          const { temp } = main;\r\n          const { description } = weather[0];\r\n          const { speed } = wind;\r\n\r\n          return (\r\n            <div key={index} className=\"forecast-item\">\r\n              <h2>{new Date(dt_txt).toLocaleString()}</h2>\r\n              <p>Temperature: {convertToCelsius(temp)}Â°C</p>\r\n              <p>Weather: {description}</p>\r\n              <p>Wind Speed: {speed} m/s</p>\r\n              <p>Precipitation Probability: {(pop * 100).toFixed(2)}%</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}