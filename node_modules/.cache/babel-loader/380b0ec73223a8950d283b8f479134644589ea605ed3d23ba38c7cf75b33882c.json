{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import WeatherForecast from'./Components/WeatherForecast';import MobileWeather from'./Components/MobileWeather';import WeatherInput from'./Components/weatherInput';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function App(){const[data,setData]=useState({});const[location,setLocation]=useState('Hyderabad');const[temperature,setTemperature]=useState(0);const[description,setDescription]=useState('');useEffect(()=>{getWeatherData(location);},[]);async function getWeatherData(location){try{const response=await fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(location,\"&appid=094b8fd5531e1870279f58b241957f6f\"));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();setData(data);setLocation(data.city.name);setDescription(data.list[0].weather[0].description);// Extract today's weather details\nconst today=new Date().getDate();const todayWeather=data.list.find(item=>new Date(item.dt*1000).getDate()===today);const temperatureInCelsius=todayWeather.main.temp-273.15;setTemperature(temperatureInCelsius.toFixed(2));}catch(error){console.error('Error fetching weather data:',error);}}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[\"Weather Forecast for \",location]}),/*#__PURE__*/_jsx(WeatherInput,{getWeatherData:getWeatherData}),/*#__PURE__*/_jsx(MobileWeather,{location:location,temperature:temperature,description:description}),/*#__PURE__*/_jsx(WeatherForecast,{data:data})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WeatherForecast","MobileWeather","WeatherInput","jsxs","_jsxs","jsx","_jsx","App","data","setData","location","setLocation","temperature","setTemperature","description","setDescription","getWeatherData","response","fetch","concat","ok","Error","status","json","city","name","list","weather","today","Date","getDate","todayWeather","find","item","dt","temperatureInCelsius","main","temp","toFixed","error","console","className","children"],"sources":["D:/Reactjs Projects/weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport WeatherForecast from './Components/WeatherForecast';\nimport MobileWeather from './Components/MobileWeather';\nimport WeatherInput from './Components/weatherInput';\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState('Hyderabad');\n  const [temperature, setTemperature] = useState(0);\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    getWeatherData(location);\n  }, []);\n\n  async function getWeatherData(location) {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=094b8fd5531e1870279f58b241957f6f`);\n        \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setData(data);\n      setLocation(data.city.name);\n      setDescription(data.list[0].weather[0].description);\n\n      // Extract today's weather details\n      const today = new Date().getDate();\n      const todayWeather = data.list.find(item => new Date(item.dt * 1000).getDate() === today);\n\n      const temperatureInCelsius = todayWeather.main.temp - 273.15;\n      setTemperature(temperatureInCelsius.toFixed(2));\n\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='title'>Weather Forecast for {location}</div>\n      <WeatherInput getWeatherData={getWeatherData}/>\n      <MobileWeather location={location} temperature={temperature} description={description}/>\n      <WeatherForecast data={data}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAErD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,WAAW,CAAC,CACrD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAElDC,SAAS,CAAC,IAAM,CACdiB,cAAc,CAACN,QAAQ,CAAC,CAC1B,CAAC,CAAE,EAAE,CAAC,CAEN,cAAe,CAAAM,cAAcA,CAACN,QAAQ,CAAE,CACtC,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,uDAAAC,MAAA,CAAuDT,QAAQ,2CAAyC,CAAC,CAErI,GAAI,CAACO,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAF,MAAA,CAAwBF,QAAQ,CAACK,MAAM,CAAE,CAAC,CAC3D,CACA,KAAM,CAAAd,IAAI,CAAG,KAAM,CAAAS,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCd,OAAO,CAACD,IAAI,CAAC,CACbG,WAAW,CAACH,IAAI,CAACgB,IAAI,CAACC,IAAI,CAAC,CAC3BV,cAAc,CAACP,IAAI,CAACkB,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAACb,WAAW,CAAC,CAEnD;AACA,KAAM,CAAAc,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAClC,KAAM,CAAAC,YAAY,CAAGvB,IAAI,CAACkB,IAAI,CAACM,IAAI,CAACC,IAAI,EAAI,GAAI,CAAAJ,IAAI,CAACI,IAAI,CAACC,EAAE,CAAG,IAAI,CAAC,CAACJ,OAAO,CAAC,CAAC,GAAKF,KAAK,CAAC,CAEzF,KAAM,CAAAO,oBAAoB,CAAGJ,YAAY,CAACK,IAAI,CAACC,IAAI,CAAG,MAAM,CAC5DxB,cAAc,CAACsB,oBAAoB,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC,CAEjD,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAEA,mBACEnC,KAAA,QAAKqC,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBtC,KAAA,QAAKqC,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAC,uBAAqB,CAAChC,QAAQ,EAAM,CAAC,cAC5DJ,IAAA,CAACJ,YAAY,EAACc,cAAc,CAAEA,cAAe,CAAC,CAAC,cAC/CV,IAAA,CAACL,aAAa,EAACS,QAAQ,CAAEA,QAAS,CAACE,WAAW,CAAEA,WAAY,CAACE,WAAW,CAAEA,WAAY,CAAC,CAAC,cACxFR,IAAA,CAACN,eAAe,EAACQ,IAAI,CAAEA,IAAK,CAAC,CAAC,EAC3B,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}