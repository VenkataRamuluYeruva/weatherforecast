{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs Projects\\\\weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport WeatherForecast from './Components/WeatherForecast';\nimport MobileWeather from './Components/MobileWeather';\nimport WeatherInput from './Components/weatherInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState('Hyderabad');\n  const [temperature, setTemperature] = useState(0);\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    getWeatherData(location);\n  }, []);\n  async function getWeatherData(location) {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=094b8fd5531e1870279f58b241957f6f`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setData(data);\n      setLocation(data.city.name);\n      setDescription(data.list[0].weather[0].description);\n\n      // Extract today's weather details\n      const today = new Date().getDate();\n      const todayWeather = data.list.find(item => new Date(item.dt * 1000).getDate() === today);\n      const temperatureInCelsius = todayWeather.main.temp - 273.15;\n      setTemperature(temperatureInCelsius.toFixed(2));\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [\"Weather Forecast for \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherInput, {\n      getWeatherData: getWeatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileWeather, {\n      location: location,\n      temperature: temperature,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IW1SEYlKIA3WQuly1/syAWhZkZc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherForecast","MobileWeather","WeatherInput","jsxDEV","_jsxDEV","App","_s","data","setData","location","setLocation","temperature","setTemperature","description","setDescription","getWeatherData","response","fetch","ok","Error","status","json","city","name","list","weather","today","Date","getDate","todayWeather","find","item","dt","temperatureInCelsius","main","temp","toFixed","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Reactjs Projects/weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport WeatherForecast from './Components/WeatherForecast';\nimport MobileWeather from './Components/MobileWeather';\nimport WeatherInput from './Components/weatherInput';\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState('Hyderabad');\n  const [temperature, setTemperature] = useState(0);\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    getWeatherData(location);\n  }, []);\n\n  async function getWeatherData(location) {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=094b8fd5531e1870279f58b241957f6f`);\n        \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setData(data);\n      setLocation(data.city.name);\n      setDescription(data.list[0].weather[0].description);\n\n      // Extract today's weather details\n      const today = new Date().getDate();\n      const todayWeather = data.list.find(item => new Date(item.dt * 1000).getDate() === today);\n\n      const temperatureInCelsius = todayWeather.main.temp - 273.15;\n      setTemperature(temperatureInCelsius.toFixed(2));\n\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='title'>Weather Forecast for {location}</div>\n      <WeatherInput getWeatherData={getWeatherData}/>\n      <MobileWeather location={location} temperature={temperature} description={description}/>\n      <WeatherForecast data={data}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}